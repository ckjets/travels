generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  User   User    @relation(fields: [userId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  Post    Post[]
  Profile Profile?
}

model Travel {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  token     String   @unique @db.VarChar(255)
  startDate DateTime @db.Timestamp(6)
  endDate   DateTime @db.Timestamp(6)
  Scrap     Scrap[]
}

model Scrap {
  id       Int            @id @default(autoincrement())
  travelId Int
  title    String         @db.VarChar(255)
  url      String?        @db.VarChar(255)
  mapUrl   String?        @db.VarChar(255)
  Travel   Travel         @relation(fields: [travelId], references: [id])
  Tags     TagsOnScraps[]
}

model Tag {
  id     Int            @id @default(autoincrement())
  name   String         @db.VarChar(255)
  Scraps TagsOnScraps[]
}

model TagsOnScraps {
  id      Int
  scrapId Int
  tagId   Int
  Scrap   Scrap @relation(fields: [scrapId], references: [id])
  Tag     Tag   @relation(fields: [tagId], references: [id])

  @@id([scrapId, tagId])
}
